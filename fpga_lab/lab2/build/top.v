// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : top.v
// Device     : EP4CE115F29C7
// LiteX sha1 : 8c3e72a
// Date       : 2022-05-18 17:51:02
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module top (
	input  wire user_btn_r,
	input  wire user_btn_l,
	output wire [6:0] seven_seg0,
	output wire [6:0] seven_seg1,
	output wire [6:0] seven_seg2,
	output wire [6:0] seven_seg3,
	output wire [6:0] seven_seg4,
	output wire [6:0] seven_seg5,
	input  wire clk50
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  __main___enable = 1'd1;
wire __main___ce;
reg  [26:0] __main___counter = 27'd0;
wire [3:0] __main___values0;
wire [3:0] __main___values1;
wire [3:0] __main___values2;
wire [3:0] __main___values3;
wire [3:0] __main___values4;
wire [3:0] __main___values5;
wire [6:0] __main___abcdefg0;
wire [6:0] __main___abcdefg1;
wire [6:0] __main___abcdefg2;
wire [6:0] __main___abcdefg3;
wire [6:0] __main___abcdefg4;
wire [6:0] __main___abcdefg5;
reg  [3:0] __main___sevensegment0_value = 4'd0;
reg  [6:0] __main___sevensegment0_abcdefg = 7'd0;
reg  [3:0] __main___sevensegment1_value = 4'd0;
reg  [6:0] __main___sevensegment1_abcdefg = 7'd0;
reg  [3:0] __main___sevensegment2_value = 4'd0;
reg  [6:0] __main___sevensegment2_abcdefg = 7'd0;
reg  [3:0] __main___sevensegment3_value = 4'd0;
reg  [6:0] __main___sevensegment3_abcdefg = 7'd0;
reg  [3:0] __main___sevensegment4_value = 4'd0;
reg  [6:0] __main___sevensegment4_abcdefg = 7'd0;
reg  [3:0] __main___sevensegment5_value = 4'd0;
reg  [6:0] __main___sevensegment5_abcdefg = 7'd0;
wire __main___tick;
reg  [5:0] __main___seconds = 6'd0;
reg  [5:0] __main___minutes = 6'd0;
reg  [4:0] __main___hours = 5'd0;
wire __main___inc_minutes;
wire __main___inc_hours;
reg  __main___btn0_press_rising = 1'd0;
wire __main___btn0_press_user_btn;
reg  __main___btn0_press_user_btn_d = 1'd0;
reg  __main___btn1_press_rising = 1'd0;
wire __main___btn1_press_user_btn;
reg  __main___btn1_press_user_btn_d = 1'd0;
wire [7:0] __main___bcd_seconds_value;
wire [3:0] __main___bcd_seconds_hundreds;
wire [3:0] __main___bcd_seconds_tens;
wire [3:0] __main___bcd_seconds_ones;
wire [7:0] __main___bcd_minutes_value;
wire [3:0] __main___bcd_minutes_hundreds;
wire [3:0] __main___bcd_minutes_tens;
wire [3:0] __main___bcd_minutes_ones;
wire [7:0] __main___bcd_hours_value;
wire [3:0] __main___bcd_hours_hundreds;
wire [3:0] __main___bcd_hours_tens;
wire [3:0] __main___bcd_hours_ones;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg  platform_int_rst = 1'd1;
reg  platform_multiregimpl0_regs0 = 1'd0;
reg  platform_multiregimpl0_regs1 = 1'd0;
reg  platform_multiregimpl1_regs0 = 1'd0;
reg  platform_multiregimpl1_regs1 = 1'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign __main___tick = __main___ce;
assign __main___inc_minutes = __main___btn0_press_rising;
assign __main___inc_hours = __main___btn1_press_rising;
assign __main___bcd_seconds_value = __main___seconds;
assign __main___values0 = __main___bcd_seconds_ones;
assign __main___values1 = __main___bcd_seconds_tens;
assign __main___bcd_minutes_value = __main___minutes;
assign __main___values2 = __main___bcd_minutes_ones;
assign __main___values3 = __main___bcd_minutes_tens;
assign __main___bcd_hours_value = __main___hours;
assign __main___values4 = __main___bcd_hours_ones;
assign __main___values5 = __main___bcd_hours_tens;
assign seven_seg0 = (~__main___abcdefg0);
assign seven_seg1 = (~__main___abcdefg1);
assign seven_seg2 = (~__main___abcdefg2);
assign seven_seg3 = (~__main___abcdefg3);
assign seven_seg4 = (~__main___abcdefg4);
assign seven_seg5 = (~__main___abcdefg5);
assign __main___ce = (__main___counter == 1'd0);
assign __main___abcdefg0 = __main___sevensegment0_abcdefg[0];
assign __main___abcdefg1 = __main___sevensegment1_abcdefg[1];
assign __main___abcdefg2 = __main___sevensegment2_abcdefg[2];
assign __main___abcdefg3 = __main___sevensegment3_abcdefg[3];
assign __main___abcdefg4 = __main___sevensegment4_abcdefg[4];
assign __main___abcdefg5 = __main___sevensegment5_abcdefg[5];
always @(*) begin
	__main___sevensegment0_abcdefg <= 7'd0;
	case (__main___sevensegment0_value)
		1'd0: begin
			__main___sevensegment0_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment0_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment0_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment0_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment0_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment0_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment0_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment0_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment0_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment0_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment0_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment0_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment0_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment0_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment0_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment0_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment1_abcdefg <= 7'd0;
	case (__main___sevensegment1_value)
		1'd0: begin
			__main___sevensegment1_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment1_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment1_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment1_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment1_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment1_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment1_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment1_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment1_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment1_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment1_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment1_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment1_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment1_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment1_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment1_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment2_abcdefg <= 7'd0;
	case (__main___sevensegment2_value)
		1'd0: begin
			__main___sevensegment2_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment2_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment2_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment2_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment2_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment2_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment2_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment2_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment2_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment2_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment2_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment2_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment2_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment2_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment2_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment2_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment3_abcdefg <= 7'd0;
	case (__main___sevensegment3_value)
		1'd0: begin
			__main___sevensegment3_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment3_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment3_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment3_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment3_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment3_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment3_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment3_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment3_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment3_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment3_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment3_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment3_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment3_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment3_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment3_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment4_abcdefg <= 7'd0;
	case (__main___sevensegment4_value)
		1'd0: begin
			__main___sevensegment4_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment4_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment4_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment4_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment4_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment4_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment4_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment4_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment4_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment4_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment4_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment4_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment4_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment4_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment4_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment4_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment5_abcdefg <= 7'd0;
	case (__main___sevensegment5_value)
		1'd0: begin
			__main___sevensegment5_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment5_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment5_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment5_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment5_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment5_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment5_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment5_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment5_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment5_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment5_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment5_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment5_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment5_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment5_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment5_abcdefg <= 7'd113;
		end
	endcase
end
assign sys_clk = clk50;
assign por_clk = clk50;
assign sys_rst = platform_int_rst;
assign __main___btn0_press_user_btn = platform_multiregimpl0_regs1;
assign __main___btn1_press_user_btn = platform_multiregimpl1_regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge por_clk) begin
	platform_int_rst <= 1'd0;
end

always @(posedge sys_clk) begin
	if (((~__main___enable) | __main___ce)) begin
		__main___counter <= 27'd99999999;
	end else begin
		__main___counter <= (__main___counter - 1'd1);
	end
	if (__main___inc_minutes) begin
		__main___minutes <= (__main___minutes + 1'd1);
	end else begin
		if (__main___inc_hours) begin
			__main___hours <= (__main___hours + 1'd1);
		end else begin
			if (__main___tick) begin
				__main___seconds <= (__main___seconds + 1'd1);
				if ((__main___seconds == 6'd59)) begin
					__main___seconds <= 1'd0;
					__main___minutes <= (__main___minutes + 1'd1);
					if ((__main___minutes == 6'd59)) begin
						__main___minutes <= 1'd0;
						__main___hours <= (__main___hours + 1'd1);
						if ((__main___hours == 5'd23)) begin
							__main___hours <= 1'd0;
						end
					end
				end
			end
		end
	end
	__main___btn0_press_user_btn_d <= user_btn_r;
	__main___btn0_press_rising <= (__main___btn0_press_user_btn & (~__main___btn0_press_user_btn_d));
	__main___btn1_press_user_btn_d <= user_btn_l;
	__main___btn1_press_rising <= (__main___btn1_press_user_btn & (~__main___btn1_press_user_btn_d));
	if (sys_rst) begin
		__main___counter <= 27'd0;
		__main___seconds <= 6'd0;
		__main___minutes <= 6'd0;
		__main___hours <= 5'd0;
		__main___btn0_press_rising <= 1'd0;
		__main___btn0_press_user_btn_d <= 1'd0;
		__main___btn1_press_rising <= 1'd0;
		__main___btn1_press_user_btn_d <= 1'd0;
	end
	platform_multiregimpl0_regs0 <= user_btn_r;
	platform_multiregimpl0_regs1 <= platform_multiregimpl0_regs0;
	platform_multiregimpl1_regs0 <= user_btn_l;
	platform_multiregimpl1_regs1 <= platform_multiregimpl1_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

bcd bcd(
	.value(__main___bcd_seconds_value),
	.hundreds(__main___bcd_seconds_hundreds),
	.ones(__main___bcd_seconds_ones),
	.tens(__main___bcd_seconds_tens)
);

bcd bcd_1(
	.value(__main___bcd_minutes_value),
	.hundreds(__main___bcd_minutes_hundreds),
	.ones(__main___bcd_minutes_ones),
	.tens(__main___bcd_minutes_tens)
);

bcd bcd_2(
	.value(__main___bcd_hours_value),
	.hundreds(__main___bcd_hours_hundreds),
	.ones(__main___bcd_hours_ones),
	.tens(__main___bcd_hours_tens)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-05-18 17:51:02.
//------------------------------------------------------------------------------
