// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : top.v
// Device     : EP4CE115F29C7
// LiteX sha1 : ccfd187
// Date       : 2022-05-19 10:43:22
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module top (
	input  wire user_btn_r,
	input  wire user_btn_l,
	output wire [6:0] seven_seg0,
	output wire [6:0] seven_seg1,
	output wire [6:0] seven_seg2,
	output wire [6:0] seven_seg3,
	output wire [6:0] seven_seg4,
	output wire [6:0] seven_seg5,
	input  wire clk50
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  __main___enable = 1'd1;
wire __main___ce;
reg  [25:0] __main___counter = 26'd0;
wire [3:0] __main___values0;
wire [3:0] __main___values1;
wire [3:0] __main___values2;
wire [3:0] __main___values3;
wire [3:0] __main___values4;
wire [3:0] __main___values5;
wire [6:0] __main___abcdefg0;
wire [6:0] __main___abcdefg1;
wire [6:0] __main___abcdefg2;
wire [6:0] __main___abcdefg3;
wire [6:0] __main___abcdefg4;
wire [6:0] __main___abcdefg5;
wire [3:0] __main___sevensegment0_value;
reg  [6:0] __main___sevensegment0_abcdefg = 7'd0;
wire [3:0] __main___sevensegment1_value;
reg  [6:0] __main___sevensegment1_abcdefg = 7'd0;
wire [3:0] __main___sevensegment2_value;
reg  [6:0] __main___sevensegment2_abcdefg = 7'd0;
wire [3:0] __main___sevensegment3_value;
reg  [6:0] __main___sevensegment3_abcdefg = 7'd0;
wire [3:0] __main___sevensegment4_value;
reg  [6:0] __main___sevensegment4_abcdefg = 7'd0;
wire [3:0] __main___sevensegment5_value;
reg  [6:0] __main___sevensegment5_abcdefg = 7'd0;
wire __main___tick;
reg  [5:0] __main___seconds = 6'd0;
reg  [5:0] __main___minutes = 6'd0;
reg  [4:0] __main___hours = 5'd0;
wire __main___inc_minutes;
wire __main___inc_hours;
reg  __main___btn0_press_rising = 1'd0;
wire __main___btn0_press_user_btn;
reg  __main___btn0_press_user_btn_d = 1'd0;
reg  __main___btn1_press_rising = 1'd0;
wire __main___btn1_press_user_btn;
reg  __main___btn1_press_user_btn_d = 1'd0;
wire [7:0] __main___bcd_seconds_value;
wire [3:0] __main___bcd_seconds_hundreds0;
wire [3:0] __main___bcd_seconds_tens0;
wire [3:0] __main___bcd_seconds_ones0;
reg  [3:0] __main___bcd_seconds_hundreds1 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens1 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones1 = 4'd0;
reg  [3:0] __main___bcd_seconds_hundreds2 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens2 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones2 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_hundreds0 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_tens0 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_ones0 = 4'd0;
reg  [3:0] __main___bcd_seconds_hundreds3 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens3 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones3 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_hundreds1 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_tens1 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_ones1 = 4'd0;
reg  [3:0] __main___bcd_seconds_hundreds4 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens4 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones4 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_hundreds2 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_tens2 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_ones2 = 4'd0;
reg  [3:0] __main___bcd_seconds_hundreds5 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens5 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones5 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_hundreds3 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_tens3 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_ones3 = 4'd0;
reg  [3:0] __main___bcd_seconds_hundreds6 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens6 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones6 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_hundreds4 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_tens4 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_ones4 = 4'd0;
reg  [3:0] __main___bcd_seconds_hundreds7 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens7 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones7 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_hundreds5 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_tens5 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_ones5 = 4'd0;
reg  [3:0] __main___bcd_seconds_hundreds8 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens8 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones8 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_hundreds6 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_tens6 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_ones6 = 4'd0;
reg  [3:0] __main___bcd_seconds_hundreds9 = 4'd0;
reg  [3:0] __main___bcd_seconds_tens9 = 4'd0;
reg  [3:0] __main___bcd_seconds_ones9 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_hundreds7 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_tens7 = 4'd0;
reg  [3:0] __main___bcd_seconds_next_ones7 = 4'd0;
wire [7:0] __main___bcd_minutes_value;
wire [3:0] __main___bcd_minutes_hundreds0;
wire [3:0] __main___bcd_minutes_tens0;
wire [3:0] __main___bcd_minutes_ones0;
reg  [3:0] __main___bcd_minutes_hundreds1 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens1 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones1 = 4'd0;
reg  [3:0] __main___bcd_minutes_hundreds2 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens2 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones2 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_hundreds0 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_tens0 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_ones0 = 4'd0;
reg  [3:0] __main___bcd_minutes_hundreds3 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens3 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones3 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_hundreds1 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_tens1 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_ones1 = 4'd0;
reg  [3:0] __main___bcd_minutes_hundreds4 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens4 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones4 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_hundreds2 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_tens2 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_ones2 = 4'd0;
reg  [3:0] __main___bcd_minutes_hundreds5 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens5 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones5 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_hundreds3 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_tens3 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_ones3 = 4'd0;
reg  [3:0] __main___bcd_minutes_hundreds6 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens6 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones6 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_hundreds4 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_tens4 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_ones4 = 4'd0;
reg  [3:0] __main___bcd_minutes_hundreds7 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens7 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones7 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_hundreds5 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_tens5 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_ones5 = 4'd0;
reg  [3:0] __main___bcd_minutes_hundreds8 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens8 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones8 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_hundreds6 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_tens6 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_ones6 = 4'd0;
reg  [3:0] __main___bcd_minutes_hundreds9 = 4'd0;
reg  [3:0] __main___bcd_minutes_tens9 = 4'd0;
reg  [3:0] __main___bcd_minutes_ones9 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_hundreds7 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_tens7 = 4'd0;
reg  [3:0] __main___bcd_minutes_next_ones7 = 4'd0;
wire [7:0] __main___bcd_hours_value;
wire [3:0] __main___bcd_hours_hundreds0;
wire [3:0] __main___bcd_hours_tens0;
wire [3:0] __main___bcd_hours_ones0;
reg  [3:0] __main___bcd_hours_hundreds1 = 4'd0;
reg  [3:0] __main___bcd_hours_tens1 = 4'd0;
reg  [3:0] __main___bcd_hours_ones1 = 4'd0;
reg  [3:0] __main___bcd_hours_hundreds2 = 4'd0;
reg  [3:0] __main___bcd_hours_tens2 = 4'd0;
reg  [3:0] __main___bcd_hours_ones2 = 4'd0;
reg  [3:0] __main___bcd_hours_next_hundreds0 = 4'd0;
reg  [3:0] __main___bcd_hours_next_tens0 = 4'd0;
reg  [3:0] __main___bcd_hours_next_ones0 = 4'd0;
reg  [3:0] __main___bcd_hours_hundreds3 = 4'd0;
reg  [3:0] __main___bcd_hours_tens3 = 4'd0;
reg  [3:0] __main___bcd_hours_ones3 = 4'd0;
reg  [3:0] __main___bcd_hours_next_hundreds1 = 4'd0;
reg  [3:0] __main___bcd_hours_next_tens1 = 4'd0;
reg  [3:0] __main___bcd_hours_next_ones1 = 4'd0;
reg  [3:0] __main___bcd_hours_hundreds4 = 4'd0;
reg  [3:0] __main___bcd_hours_tens4 = 4'd0;
reg  [3:0] __main___bcd_hours_ones4 = 4'd0;
reg  [3:0] __main___bcd_hours_next_hundreds2 = 4'd0;
reg  [3:0] __main___bcd_hours_next_tens2 = 4'd0;
reg  [3:0] __main___bcd_hours_next_ones2 = 4'd0;
reg  [3:0] __main___bcd_hours_hundreds5 = 4'd0;
reg  [3:0] __main___bcd_hours_tens5 = 4'd0;
reg  [3:0] __main___bcd_hours_ones5 = 4'd0;
reg  [3:0] __main___bcd_hours_next_hundreds3 = 4'd0;
reg  [3:0] __main___bcd_hours_next_tens3 = 4'd0;
reg  [3:0] __main___bcd_hours_next_ones3 = 4'd0;
reg  [3:0] __main___bcd_hours_hundreds6 = 4'd0;
reg  [3:0] __main___bcd_hours_tens6 = 4'd0;
reg  [3:0] __main___bcd_hours_ones6 = 4'd0;
reg  [3:0] __main___bcd_hours_next_hundreds4 = 4'd0;
reg  [3:0] __main___bcd_hours_next_tens4 = 4'd0;
reg  [3:0] __main___bcd_hours_next_ones4 = 4'd0;
reg  [3:0] __main___bcd_hours_hundreds7 = 4'd0;
reg  [3:0] __main___bcd_hours_tens7 = 4'd0;
reg  [3:0] __main___bcd_hours_ones7 = 4'd0;
reg  [3:0] __main___bcd_hours_next_hundreds5 = 4'd0;
reg  [3:0] __main___bcd_hours_next_tens5 = 4'd0;
reg  [3:0] __main___bcd_hours_next_ones5 = 4'd0;
reg  [3:0] __main___bcd_hours_hundreds8 = 4'd0;
reg  [3:0] __main___bcd_hours_tens8 = 4'd0;
reg  [3:0] __main___bcd_hours_ones8 = 4'd0;
reg  [3:0] __main___bcd_hours_next_hundreds6 = 4'd0;
reg  [3:0] __main___bcd_hours_next_tens6 = 4'd0;
reg  [3:0] __main___bcd_hours_next_ones6 = 4'd0;
reg  [3:0] __main___bcd_hours_hundreds9 = 4'd0;
reg  [3:0] __main___bcd_hours_tens9 = 4'd0;
reg  [3:0] __main___bcd_hours_ones9 = 4'd0;
reg  [3:0] __main___bcd_hours_next_hundreds7 = 4'd0;
reg  [3:0] __main___bcd_hours_next_tens7 = 4'd0;
reg  [3:0] __main___bcd_hours_next_ones7 = 4'd0;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg  platform_int_rst = 1'd1;
reg  platform_multiregimpl0_regs0 = 1'd0;
reg  platform_multiregimpl0_regs1 = 1'd0;
reg  platform_multiregimpl1_regs0 = 1'd0;
reg  platform_multiregimpl1_regs1 = 1'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign __main___tick = __main___ce;
assign __main___inc_minutes = __main___btn0_press_rising;
assign __main___inc_hours = __main___btn1_press_rising;
assign __main___bcd_seconds_value = __main___seconds;
assign __main___values0 = __main___bcd_seconds_ones0;
assign __main___values1 = __main___bcd_seconds_tens0;
assign __main___bcd_minutes_value = __main___minutes;
assign __main___values2 = __main___bcd_minutes_ones0;
assign __main___values3 = __main___bcd_minutes_tens0;
assign __main___bcd_hours_value = __main___hours;
assign __main___values4 = __main___bcd_hours_ones0;
assign __main___values5 = __main___bcd_hours_tens0;
assign seven_seg0 = (~__main___abcdefg0);
assign seven_seg1 = (~__main___abcdefg1);
assign seven_seg2 = (~__main___abcdefg2);
assign seven_seg3 = (~__main___abcdefg3);
assign seven_seg4 = (~__main___abcdefg4);
assign seven_seg5 = (~__main___abcdefg5);
assign __main___ce = (__main___counter == 1'd0);
assign __main___sevensegment0_value = __main___values0;
assign __main___sevensegment1_value = __main___values1;
assign __main___sevensegment2_value = __main___values2;
assign __main___sevensegment3_value = __main___values3;
assign __main___sevensegment4_value = __main___values4;
assign __main___sevensegment5_value = __main___values5;
assign __main___abcdefg0 = __main___sevensegment0_abcdefg;
assign __main___abcdefg1 = __main___sevensegment1_abcdefg;
assign __main___abcdefg2 = __main___sevensegment2_abcdefg;
assign __main___abcdefg3 = __main___sevensegment3_abcdefg;
assign __main___abcdefg4 = __main___sevensegment4_abcdefg;
assign __main___abcdefg5 = __main___sevensegment5_abcdefg;
always @(*) begin
	__main___sevensegment0_abcdefg <= 7'd0;
	case (__main___sevensegment0_value)
		1'd0: begin
			__main___sevensegment0_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment0_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment0_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment0_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment0_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment0_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment0_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment0_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment0_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment0_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment0_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment0_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment0_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment0_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment0_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment0_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment1_abcdefg <= 7'd0;
	case (__main___sevensegment1_value)
		1'd0: begin
			__main___sevensegment1_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment1_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment1_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment1_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment1_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment1_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment1_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment1_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment1_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment1_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment1_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment1_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment1_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment1_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment1_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment1_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment2_abcdefg <= 7'd0;
	case (__main___sevensegment2_value)
		1'd0: begin
			__main___sevensegment2_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment2_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment2_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment2_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment2_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment2_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment2_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment2_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment2_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment2_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment2_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment2_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment2_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment2_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment2_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment2_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment3_abcdefg <= 7'd0;
	case (__main___sevensegment3_value)
		1'd0: begin
			__main___sevensegment3_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment3_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment3_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment3_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment3_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment3_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment3_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment3_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment3_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment3_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment3_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment3_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment3_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment3_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment3_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment3_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment4_abcdefg <= 7'd0;
	case (__main___sevensegment4_value)
		1'd0: begin
			__main___sevensegment4_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment4_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment4_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment4_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment4_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment4_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment4_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment4_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment4_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment4_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment4_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment4_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment4_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment4_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment4_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment4_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___sevensegment5_abcdefg <= 7'd0;
	case (__main___sevensegment5_value)
		1'd0: begin
			__main___sevensegment5_abcdefg <= 6'd63;
		end
		1'd1: begin
			__main___sevensegment5_abcdefg <= 3'd6;
		end
		2'd2: begin
			__main___sevensegment5_abcdefg <= 7'd91;
		end
		2'd3: begin
			__main___sevensegment5_abcdefg <= 7'd79;
		end
		3'd4: begin
			__main___sevensegment5_abcdefg <= 7'd102;
		end
		3'd5: begin
			__main___sevensegment5_abcdefg <= 7'd109;
		end
		3'd6: begin
			__main___sevensegment5_abcdefg <= 7'd125;
		end
		3'd7: begin
			__main___sevensegment5_abcdefg <= 3'd7;
		end
		4'd8: begin
			__main___sevensegment5_abcdefg <= 7'd127;
		end
		4'd9: begin
			__main___sevensegment5_abcdefg <= 7'd111;
		end
		4'd10: begin
			__main___sevensegment5_abcdefg <= 7'd119;
		end
		4'd11: begin
			__main___sevensegment5_abcdefg <= 7'd124;
		end
		4'd12: begin
			__main___sevensegment5_abcdefg <= 6'd57;
		end
		4'd13: begin
			__main___sevensegment5_abcdefg <= 7'd94;
		end
		4'd14: begin
			__main___sevensegment5_abcdefg <= 7'd121;
		end
		4'd15: begin
			__main___sevensegment5_abcdefg <= 7'd113;
		end
	endcase
end
always @(*) begin
	__main___bcd_seconds_hundreds2 <= 4'd0;
	__main___bcd_seconds_hundreds2 <= __main___bcd_seconds_hundreds1;
	if ((__main___bcd_seconds_hundreds1 >= 3'd5)) begin
		__main___bcd_seconds_hundreds2 <= (__main___bcd_seconds_hundreds1 + 2'd3);
	end else begin
		__main___bcd_seconds_hundreds2 <= __main___bcd_seconds_hundreds1;
	end
end
always @(*) begin
	__main___bcd_seconds_tens2 <= 4'd0;
	__main___bcd_seconds_tens2 <= __main___bcd_seconds_tens1;
	if ((__main___bcd_seconds_tens1 >= 3'd5)) begin
		__main___bcd_seconds_tens2 <= (__main___bcd_seconds_tens1 + 2'd3);
	end else begin
		__main___bcd_seconds_tens2 <= __main___bcd_seconds_tens1;
	end
end
always @(*) begin
	__main___bcd_seconds_ones2 <= 4'd0;
	__main___bcd_seconds_ones2 <= __main___bcd_seconds_ones1;
	if ((__main___bcd_seconds_ones1 >= 3'd5)) begin
		__main___bcd_seconds_ones2 <= (__main___bcd_seconds_ones1 + 2'd3);
	end else begin
		__main___bcd_seconds_ones2 <= __main___bcd_seconds_ones1;
	end
end
always @(*) begin
	__main___bcd_seconds_next_hundreds0 <= 4'd0;
	__main___bcd_seconds_next_hundreds0[3:1] <= __main___bcd_seconds_hundreds2;
	__main___bcd_seconds_next_hundreds0[0] <= __main___bcd_seconds_tens2[3];
end
always @(*) begin
	__main___bcd_seconds_next_tens0 <= 4'd0;
	__main___bcd_seconds_next_tens0[3:1] <= __main___bcd_seconds_tens2;
	__main___bcd_seconds_next_tens0[0] <= __main___bcd_seconds_ones2[3];
end
always @(*) begin
	__main___bcd_seconds_next_ones0 <= 4'd0;
	__main___bcd_seconds_next_ones0[3:1] <= __main___bcd_seconds_ones2;
	__main___bcd_seconds_next_ones0[0] <= __main___bcd_seconds_value[7];
end
always @(*) begin
	__main___bcd_seconds_hundreds3 <= 4'd0;
	__main___bcd_seconds_hundreds3 <= __main___bcd_seconds_next_hundreds0;
	if ((__main___bcd_seconds_next_hundreds0 >= 3'd5)) begin
		__main___bcd_seconds_hundreds3 <= (__main___bcd_seconds_next_hundreds0 + 2'd3);
	end else begin
		__main___bcd_seconds_hundreds3 <= __main___bcd_seconds_next_hundreds0;
	end
end
always @(*) begin
	__main___bcd_seconds_tens3 <= 4'd0;
	__main___bcd_seconds_tens3 <= __main___bcd_seconds_next_tens0;
	if ((__main___bcd_seconds_next_tens0 >= 3'd5)) begin
		__main___bcd_seconds_tens3 <= (__main___bcd_seconds_next_tens0 + 2'd3);
	end else begin
		__main___bcd_seconds_tens3 <= __main___bcd_seconds_next_tens0;
	end
end
always @(*) begin
	__main___bcd_seconds_ones3 <= 4'd0;
	__main___bcd_seconds_ones3 <= __main___bcd_seconds_next_ones0;
	if ((__main___bcd_seconds_next_ones0 >= 3'd5)) begin
		__main___bcd_seconds_ones3 <= (__main___bcd_seconds_next_ones0 + 2'd3);
	end else begin
		__main___bcd_seconds_ones3 <= __main___bcd_seconds_next_ones0;
	end
end
always @(*) begin
	__main___bcd_seconds_next_hundreds1 <= 4'd0;
	__main___bcd_seconds_next_hundreds1[3:1] <= __main___bcd_seconds_hundreds3;
	__main___bcd_seconds_next_hundreds1[0] <= __main___bcd_seconds_tens3[3];
end
always @(*) begin
	__main___bcd_seconds_next_tens1 <= 4'd0;
	__main___bcd_seconds_next_tens1[3:1] <= __main___bcd_seconds_tens3;
	__main___bcd_seconds_next_tens1[0] <= __main___bcd_seconds_ones3[3];
end
always @(*) begin
	__main___bcd_seconds_next_ones1 <= 4'd0;
	__main___bcd_seconds_next_ones1[3:1] <= __main___bcd_seconds_ones3;
	__main___bcd_seconds_next_ones1[0] <= __main___bcd_seconds_value[6];
end
always @(*) begin
	__main___bcd_seconds_hundreds4 <= 4'd0;
	__main___bcd_seconds_hundreds4 <= __main___bcd_seconds_next_hundreds1;
	if ((__main___bcd_seconds_next_hundreds1 >= 3'd5)) begin
		__main___bcd_seconds_hundreds4 <= (__main___bcd_seconds_next_hundreds1 + 2'd3);
	end else begin
		__main___bcd_seconds_hundreds4 <= __main___bcd_seconds_next_hundreds1;
	end
end
always @(*) begin
	__main___bcd_seconds_tens4 <= 4'd0;
	__main___bcd_seconds_tens4 <= __main___bcd_seconds_next_tens1;
	if ((__main___bcd_seconds_next_tens1 >= 3'd5)) begin
		__main___bcd_seconds_tens4 <= (__main___bcd_seconds_next_tens1 + 2'd3);
	end else begin
		__main___bcd_seconds_tens4 <= __main___bcd_seconds_next_tens1;
	end
end
always @(*) begin
	__main___bcd_seconds_ones4 <= 4'd0;
	__main___bcd_seconds_ones4 <= __main___bcd_seconds_next_ones1;
	if ((__main___bcd_seconds_next_ones1 >= 3'd5)) begin
		__main___bcd_seconds_ones4 <= (__main___bcd_seconds_next_ones1 + 2'd3);
	end else begin
		__main___bcd_seconds_ones4 <= __main___bcd_seconds_next_ones1;
	end
end
always @(*) begin
	__main___bcd_seconds_next_hundreds2 <= 4'd0;
	__main___bcd_seconds_next_hundreds2[3:1] <= __main___bcd_seconds_hundreds4;
	__main___bcd_seconds_next_hundreds2[0] <= __main___bcd_seconds_tens4[3];
end
always @(*) begin
	__main___bcd_seconds_next_tens2 <= 4'd0;
	__main___bcd_seconds_next_tens2[3:1] <= __main___bcd_seconds_tens4;
	__main___bcd_seconds_next_tens2[0] <= __main___bcd_seconds_ones4[3];
end
always @(*) begin
	__main___bcd_seconds_next_ones2 <= 4'd0;
	__main___bcd_seconds_next_ones2[3:1] <= __main___bcd_seconds_ones4;
	__main___bcd_seconds_next_ones2[0] <= __main___bcd_seconds_value[5];
end
always @(*) begin
	__main___bcd_seconds_hundreds5 <= 4'd0;
	__main___bcd_seconds_hundreds5 <= __main___bcd_seconds_next_hundreds2;
	if ((__main___bcd_seconds_next_hundreds2 >= 3'd5)) begin
		__main___bcd_seconds_hundreds5 <= (__main___bcd_seconds_next_hundreds2 + 2'd3);
	end else begin
		__main___bcd_seconds_hundreds5 <= __main___bcd_seconds_next_hundreds2;
	end
end
always @(*) begin
	__main___bcd_seconds_tens5 <= 4'd0;
	__main___bcd_seconds_tens5 <= __main___bcd_seconds_next_tens2;
	if ((__main___bcd_seconds_next_tens2 >= 3'd5)) begin
		__main___bcd_seconds_tens5 <= (__main___bcd_seconds_next_tens2 + 2'd3);
	end else begin
		__main___bcd_seconds_tens5 <= __main___bcd_seconds_next_tens2;
	end
end
always @(*) begin
	__main___bcd_seconds_ones5 <= 4'd0;
	__main___bcd_seconds_ones5 <= __main___bcd_seconds_next_ones2;
	if ((__main___bcd_seconds_next_ones2 >= 3'd5)) begin
		__main___bcd_seconds_ones5 <= (__main___bcd_seconds_next_ones2 + 2'd3);
	end else begin
		__main___bcd_seconds_ones5 <= __main___bcd_seconds_next_ones2;
	end
end
always @(*) begin
	__main___bcd_seconds_next_hundreds3 <= 4'd0;
	__main___bcd_seconds_next_hundreds3[3:1] <= __main___bcd_seconds_hundreds5;
	__main___bcd_seconds_next_hundreds3[0] <= __main___bcd_seconds_tens5[3];
end
always @(*) begin
	__main___bcd_seconds_next_tens3 <= 4'd0;
	__main___bcd_seconds_next_tens3[3:1] <= __main___bcd_seconds_tens5;
	__main___bcd_seconds_next_tens3[0] <= __main___bcd_seconds_ones5[3];
end
always @(*) begin
	__main___bcd_seconds_next_ones3 <= 4'd0;
	__main___bcd_seconds_next_ones3[3:1] <= __main___bcd_seconds_ones5;
	__main___bcd_seconds_next_ones3[0] <= __main___bcd_seconds_value[4];
end
always @(*) begin
	__main___bcd_seconds_hundreds6 <= 4'd0;
	__main___bcd_seconds_hundreds6 <= __main___bcd_seconds_next_hundreds3;
	if ((__main___bcd_seconds_next_hundreds3 >= 3'd5)) begin
		__main___bcd_seconds_hundreds6 <= (__main___bcd_seconds_next_hundreds3 + 2'd3);
	end else begin
		__main___bcd_seconds_hundreds6 <= __main___bcd_seconds_next_hundreds3;
	end
end
always @(*) begin
	__main___bcd_seconds_tens6 <= 4'd0;
	__main___bcd_seconds_tens6 <= __main___bcd_seconds_next_tens3;
	if ((__main___bcd_seconds_next_tens3 >= 3'd5)) begin
		__main___bcd_seconds_tens6 <= (__main___bcd_seconds_next_tens3 + 2'd3);
	end else begin
		__main___bcd_seconds_tens6 <= __main___bcd_seconds_next_tens3;
	end
end
always @(*) begin
	__main___bcd_seconds_ones6 <= 4'd0;
	__main___bcd_seconds_ones6 <= __main___bcd_seconds_next_ones3;
	if ((__main___bcd_seconds_next_ones3 >= 3'd5)) begin
		__main___bcd_seconds_ones6 <= (__main___bcd_seconds_next_ones3 + 2'd3);
	end else begin
		__main___bcd_seconds_ones6 <= __main___bcd_seconds_next_ones3;
	end
end
always @(*) begin
	__main___bcd_seconds_next_hundreds4 <= 4'd0;
	__main___bcd_seconds_next_hundreds4[3:1] <= __main___bcd_seconds_hundreds6;
	__main___bcd_seconds_next_hundreds4[0] <= __main___bcd_seconds_tens6[3];
end
always @(*) begin
	__main___bcd_seconds_next_tens4 <= 4'd0;
	__main___bcd_seconds_next_tens4[3:1] <= __main___bcd_seconds_tens6;
	__main___bcd_seconds_next_tens4[0] <= __main___bcd_seconds_ones6[3];
end
always @(*) begin
	__main___bcd_seconds_next_ones4 <= 4'd0;
	__main___bcd_seconds_next_ones4[3:1] <= __main___bcd_seconds_ones6;
	__main___bcd_seconds_next_ones4[0] <= __main___bcd_seconds_value[3];
end
always @(*) begin
	__main___bcd_seconds_hundreds7 <= 4'd0;
	__main___bcd_seconds_hundreds7 <= __main___bcd_seconds_next_hundreds4;
	if ((__main___bcd_seconds_next_hundreds4 >= 3'd5)) begin
		__main___bcd_seconds_hundreds7 <= (__main___bcd_seconds_next_hundreds4 + 2'd3);
	end else begin
		__main___bcd_seconds_hundreds7 <= __main___bcd_seconds_next_hundreds4;
	end
end
always @(*) begin
	__main___bcd_seconds_tens7 <= 4'd0;
	__main___bcd_seconds_tens7 <= __main___bcd_seconds_next_tens4;
	if ((__main___bcd_seconds_next_tens4 >= 3'd5)) begin
		__main___bcd_seconds_tens7 <= (__main___bcd_seconds_next_tens4 + 2'd3);
	end else begin
		__main___bcd_seconds_tens7 <= __main___bcd_seconds_next_tens4;
	end
end
always @(*) begin
	__main___bcd_seconds_ones7 <= 4'd0;
	__main___bcd_seconds_ones7 <= __main___bcd_seconds_next_ones4;
	if ((__main___bcd_seconds_next_ones4 >= 3'd5)) begin
		__main___bcd_seconds_ones7 <= (__main___bcd_seconds_next_ones4 + 2'd3);
	end else begin
		__main___bcd_seconds_ones7 <= __main___bcd_seconds_next_ones4;
	end
end
always @(*) begin
	__main___bcd_seconds_next_hundreds5 <= 4'd0;
	__main___bcd_seconds_next_hundreds5[3:1] <= __main___bcd_seconds_hundreds7;
	__main___bcd_seconds_next_hundreds5[0] <= __main___bcd_seconds_tens7[3];
end
always @(*) begin
	__main___bcd_seconds_next_tens5 <= 4'd0;
	__main___bcd_seconds_next_tens5[3:1] <= __main___bcd_seconds_tens7;
	__main___bcd_seconds_next_tens5[0] <= __main___bcd_seconds_ones7[3];
end
always @(*) begin
	__main___bcd_seconds_next_ones5 <= 4'd0;
	__main___bcd_seconds_next_ones5[3:1] <= __main___bcd_seconds_ones7;
	__main___bcd_seconds_next_ones5[0] <= __main___bcd_seconds_value[2];
end
always @(*) begin
	__main___bcd_seconds_hundreds8 <= 4'd0;
	__main___bcd_seconds_hundreds8 <= __main___bcd_seconds_next_hundreds5;
	if ((__main___bcd_seconds_next_hundreds5 >= 3'd5)) begin
		__main___bcd_seconds_hundreds8 <= (__main___bcd_seconds_next_hundreds5 + 2'd3);
	end else begin
		__main___bcd_seconds_hundreds8 <= __main___bcd_seconds_next_hundreds5;
	end
end
always @(*) begin
	__main___bcd_seconds_tens8 <= 4'd0;
	__main___bcd_seconds_tens8 <= __main___bcd_seconds_next_tens5;
	if ((__main___bcd_seconds_next_tens5 >= 3'd5)) begin
		__main___bcd_seconds_tens8 <= (__main___bcd_seconds_next_tens5 + 2'd3);
	end else begin
		__main___bcd_seconds_tens8 <= __main___bcd_seconds_next_tens5;
	end
end
always @(*) begin
	__main___bcd_seconds_ones8 <= 4'd0;
	__main___bcd_seconds_ones8 <= __main___bcd_seconds_next_ones5;
	if ((__main___bcd_seconds_next_ones5 >= 3'd5)) begin
		__main___bcd_seconds_ones8 <= (__main___bcd_seconds_next_ones5 + 2'd3);
	end else begin
		__main___bcd_seconds_ones8 <= __main___bcd_seconds_next_ones5;
	end
end
always @(*) begin
	__main___bcd_seconds_next_hundreds6 <= 4'd0;
	__main___bcd_seconds_next_hundreds6[3:1] <= __main___bcd_seconds_hundreds8;
	__main___bcd_seconds_next_hundreds6[0] <= __main___bcd_seconds_tens8[3];
end
always @(*) begin
	__main___bcd_seconds_next_tens6 <= 4'd0;
	__main___bcd_seconds_next_tens6[3:1] <= __main___bcd_seconds_tens8;
	__main___bcd_seconds_next_tens6[0] <= __main___bcd_seconds_ones8[3];
end
always @(*) begin
	__main___bcd_seconds_next_ones6 <= 4'd0;
	__main___bcd_seconds_next_ones6[3:1] <= __main___bcd_seconds_ones8;
	__main___bcd_seconds_next_ones6[0] <= __main___bcd_seconds_value[1];
end
always @(*) begin
	__main___bcd_seconds_hundreds9 <= 4'd0;
	__main___bcd_seconds_hundreds9 <= __main___bcd_seconds_next_hundreds6;
	if ((__main___bcd_seconds_next_hundreds6 >= 3'd5)) begin
		__main___bcd_seconds_hundreds9 <= (__main___bcd_seconds_next_hundreds6 + 2'd3);
	end else begin
		__main___bcd_seconds_hundreds9 <= __main___bcd_seconds_next_hundreds6;
	end
end
always @(*) begin
	__main___bcd_seconds_tens9 <= 4'd0;
	__main___bcd_seconds_tens9 <= __main___bcd_seconds_next_tens6;
	if ((__main___bcd_seconds_next_tens6 >= 3'd5)) begin
		__main___bcd_seconds_tens9 <= (__main___bcd_seconds_next_tens6 + 2'd3);
	end else begin
		__main___bcd_seconds_tens9 <= __main___bcd_seconds_next_tens6;
	end
end
always @(*) begin
	__main___bcd_seconds_ones9 <= 4'd0;
	__main___bcd_seconds_ones9 <= __main___bcd_seconds_next_ones6;
	if ((__main___bcd_seconds_next_ones6 >= 3'd5)) begin
		__main___bcd_seconds_ones9 <= (__main___bcd_seconds_next_ones6 + 2'd3);
	end else begin
		__main___bcd_seconds_ones9 <= __main___bcd_seconds_next_ones6;
	end
end
always @(*) begin
	__main___bcd_seconds_next_hundreds7 <= 4'd0;
	__main___bcd_seconds_next_hundreds7[3:1] <= __main___bcd_seconds_hundreds9;
	__main___bcd_seconds_next_hundreds7[0] <= __main___bcd_seconds_tens9[3];
end
always @(*) begin
	__main___bcd_seconds_next_tens7 <= 4'd0;
	__main___bcd_seconds_next_tens7[3:1] <= __main___bcd_seconds_tens9;
	__main___bcd_seconds_next_tens7[0] <= __main___bcd_seconds_ones9[3];
end
always @(*) begin
	__main___bcd_seconds_next_ones7 <= 4'd0;
	__main___bcd_seconds_next_ones7[3:1] <= __main___bcd_seconds_ones9;
	__main___bcd_seconds_next_ones7[0] <= __main___bcd_seconds_value[0];
end
assign __main___bcd_seconds_hundreds0 = __main___bcd_seconds_next_hundreds7;
assign __main___bcd_seconds_tens0 = __main___bcd_seconds_next_tens7;
assign __main___bcd_seconds_ones0 = __main___bcd_seconds_next_ones7;
always @(*) begin
	__main___bcd_minutes_hundreds2 <= 4'd0;
	__main___bcd_minutes_hundreds2 <= __main___bcd_minutes_hundreds1;
	if ((__main___bcd_minutes_hundreds1 >= 3'd5)) begin
		__main___bcd_minutes_hundreds2 <= (__main___bcd_minutes_hundreds1 + 2'd3);
	end else begin
		__main___bcd_minutes_hundreds2 <= __main___bcd_minutes_hundreds1;
	end
end
always @(*) begin
	__main___bcd_minutes_tens2 <= 4'd0;
	__main___bcd_minutes_tens2 <= __main___bcd_minutes_tens1;
	if ((__main___bcd_minutes_tens1 >= 3'd5)) begin
		__main___bcd_minutes_tens2 <= (__main___bcd_minutes_tens1 + 2'd3);
	end else begin
		__main___bcd_minutes_tens2 <= __main___bcd_minutes_tens1;
	end
end
always @(*) begin
	__main___bcd_minutes_ones2 <= 4'd0;
	__main___bcd_minutes_ones2 <= __main___bcd_minutes_ones1;
	if ((__main___bcd_minutes_ones1 >= 3'd5)) begin
		__main___bcd_minutes_ones2 <= (__main___bcd_minutes_ones1 + 2'd3);
	end else begin
		__main___bcd_minutes_ones2 <= __main___bcd_minutes_ones1;
	end
end
always @(*) begin
	__main___bcd_minutes_next_hundreds0 <= 4'd0;
	__main___bcd_minutes_next_hundreds0[3:1] <= __main___bcd_minutes_hundreds2;
	__main___bcd_minutes_next_hundreds0[0] <= __main___bcd_minutes_tens2[3];
end
always @(*) begin
	__main___bcd_minutes_next_tens0 <= 4'd0;
	__main___bcd_minutes_next_tens0[3:1] <= __main___bcd_minutes_tens2;
	__main___bcd_minutes_next_tens0[0] <= __main___bcd_minutes_ones2[3];
end
always @(*) begin
	__main___bcd_minutes_next_ones0 <= 4'd0;
	__main___bcd_minutes_next_ones0[3:1] <= __main___bcd_minutes_ones2;
	__main___bcd_minutes_next_ones0[0] <= __main___bcd_minutes_value[7];
end
always @(*) begin
	__main___bcd_minutes_hundreds3 <= 4'd0;
	__main___bcd_minutes_hundreds3 <= __main___bcd_minutes_next_hundreds0;
	if ((__main___bcd_minutes_next_hundreds0 >= 3'd5)) begin
		__main___bcd_minutes_hundreds3 <= (__main___bcd_minutes_next_hundreds0 + 2'd3);
	end else begin
		__main___bcd_minutes_hundreds3 <= __main___bcd_minutes_next_hundreds0;
	end
end
always @(*) begin
	__main___bcd_minutes_tens3 <= 4'd0;
	__main___bcd_minutes_tens3 <= __main___bcd_minutes_next_tens0;
	if ((__main___bcd_minutes_next_tens0 >= 3'd5)) begin
		__main___bcd_minutes_tens3 <= (__main___bcd_minutes_next_tens0 + 2'd3);
	end else begin
		__main___bcd_minutes_tens3 <= __main___bcd_minutes_next_tens0;
	end
end
always @(*) begin
	__main___bcd_minutes_ones3 <= 4'd0;
	__main___bcd_minutes_ones3 <= __main___bcd_minutes_next_ones0;
	if ((__main___bcd_minutes_next_ones0 >= 3'd5)) begin
		__main___bcd_minutes_ones3 <= (__main___bcd_minutes_next_ones0 + 2'd3);
	end else begin
		__main___bcd_minutes_ones3 <= __main___bcd_minutes_next_ones0;
	end
end
always @(*) begin
	__main___bcd_minutes_next_hundreds1 <= 4'd0;
	__main___bcd_minutes_next_hundreds1[3:1] <= __main___bcd_minutes_hundreds3;
	__main___bcd_minutes_next_hundreds1[0] <= __main___bcd_minutes_tens3[3];
end
always @(*) begin
	__main___bcd_minutes_next_tens1 <= 4'd0;
	__main___bcd_minutes_next_tens1[3:1] <= __main___bcd_minutes_tens3;
	__main___bcd_minutes_next_tens1[0] <= __main___bcd_minutes_ones3[3];
end
always @(*) begin
	__main___bcd_minutes_next_ones1 <= 4'd0;
	__main___bcd_minutes_next_ones1[3:1] <= __main___bcd_minutes_ones3;
	__main___bcd_minutes_next_ones1[0] <= __main___bcd_minutes_value[6];
end
always @(*) begin
	__main___bcd_minutes_hundreds4 <= 4'd0;
	__main___bcd_minutes_hundreds4 <= __main___bcd_minutes_next_hundreds1;
	if ((__main___bcd_minutes_next_hundreds1 >= 3'd5)) begin
		__main___bcd_minutes_hundreds4 <= (__main___bcd_minutes_next_hundreds1 + 2'd3);
	end else begin
		__main___bcd_minutes_hundreds4 <= __main___bcd_minutes_next_hundreds1;
	end
end
always @(*) begin
	__main___bcd_minutes_tens4 <= 4'd0;
	__main___bcd_minutes_tens4 <= __main___bcd_minutes_next_tens1;
	if ((__main___bcd_minutes_next_tens1 >= 3'd5)) begin
		__main___bcd_minutes_tens4 <= (__main___bcd_minutes_next_tens1 + 2'd3);
	end else begin
		__main___bcd_minutes_tens4 <= __main___bcd_minutes_next_tens1;
	end
end
always @(*) begin
	__main___bcd_minutes_ones4 <= 4'd0;
	__main___bcd_minutes_ones4 <= __main___bcd_minutes_next_ones1;
	if ((__main___bcd_minutes_next_ones1 >= 3'd5)) begin
		__main___bcd_minutes_ones4 <= (__main___bcd_minutes_next_ones1 + 2'd3);
	end else begin
		__main___bcd_minutes_ones4 <= __main___bcd_minutes_next_ones1;
	end
end
always @(*) begin
	__main___bcd_minutes_next_hundreds2 <= 4'd0;
	__main___bcd_minutes_next_hundreds2[3:1] <= __main___bcd_minutes_hundreds4;
	__main___bcd_minutes_next_hundreds2[0] <= __main___bcd_minutes_tens4[3];
end
always @(*) begin
	__main___bcd_minutes_next_tens2 <= 4'd0;
	__main___bcd_minutes_next_tens2[3:1] <= __main___bcd_minutes_tens4;
	__main___bcd_minutes_next_tens2[0] <= __main___bcd_minutes_ones4[3];
end
always @(*) begin
	__main___bcd_minutes_next_ones2 <= 4'd0;
	__main___bcd_minutes_next_ones2[3:1] <= __main___bcd_minutes_ones4;
	__main___bcd_minutes_next_ones2[0] <= __main___bcd_minutes_value[5];
end
always @(*) begin
	__main___bcd_minutes_hundreds5 <= 4'd0;
	__main___bcd_minutes_hundreds5 <= __main___bcd_minutes_next_hundreds2;
	if ((__main___bcd_minutes_next_hundreds2 >= 3'd5)) begin
		__main___bcd_minutes_hundreds5 <= (__main___bcd_minutes_next_hundreds2 + 2'd3);
	end else begin
		__main___bcd_minutes_hundreds5 <= __main___bcd_minutes_next_hundreds2;
	end
end
always @(*) begin
	__main___bcd_minutes_tens5 <= 4'd0;
	__main___bcd_minutes_tens5 <= __main___bcd_minutes_next_tens2;
	if ((__main___bcd_minutes_next_tens2 >= 3'd5)) begin
		__main___bcd_minutes_tens5 <= (__main___bcd_minutes_next_tens2 + 2'd3);
	end else begin
		__main___bcd_minutes_tens5 <= __main___bcd_minutes_next_tens2;
	end
end
always @(*) begin
	__main___bcd_minutes_ones5 <= 4'd0;
	__main___bcd_minutes_ones5 <= __main___bcd_minutes_next_ones2;
	if ((__main___bcd_minutes_next_ones2 >= 3'd5)) begin
		__main___bcd_minutes_ones5 <= (__main___bcd_minutes_next_ones2 + 2'd3);
	end else begin
		__main___bcd_minutes_ones5 <= __main___bcd_minutes_next_ones2;
	end
end
always @(*) begin
	__main___bcd_minutes_next_hundreds3 <= 4'd0;
	__main___bcd_minutes_next_hundreds3[3:1] <= __main___bcd_minutes_hundreds5;
	__main___bcd_minutes_next_hundreds3[0] <= __main___bcd_minutes_tens5[3];
end
always @(*) begin
	__main___bcd_minutes_next_tens3 <= 4'd0;
	__main___bcd_minutes_next_tens3[3:1] <= __main___bcd_minutes_tens5;
	__main___bcd_minutes_next_tens3[0] <= __main___bcd_minutes_ones5[3];
end
always @(*) begin
	__main___bcd_minutes_next_ones3 <= 4'd0;
	__main___bcd_minutes_next_ones3[3:1] <= __main___bcd_minutes_ones5;
	__main___bcd_minutes_next_ones3[0] <= __main___bcd_minutes_value[4];
end
always @(*) begin
	__main___bcd_minutes_hundreds6 <= 4'd0;
	__main___bcd_minutes_hundreds6 <= __main___bcd_minutes_next_hundreds3;
	if ((__main___bcd_minutes_next_hundreds3 >= 3'd5)) begin
		__main___bcd_minutes_hundreds6 <= (__main___bcd_minutes_next_hundreds3 + 2'd3);
	end else begin
		__main___bcd_minutes_hundreds6 <= __main___bcd_minutes_next_hundreds3;
	end
end
always @(*) begin
	__main___bcd_minutes_tens6 <= 4'd0;
	__main___bcd_minutes_tens6 <= __main___bcd_minutes_next_tens3;
	if ((__main___bcd_minutes_next_tens3 >= 3'd5)) begin
		__main___bcd_minutes_tens6 <= (__main___bcd_minutes_next_tens3 + 2'd3);
	end else begin
		__main___bcd_minutes_tens6 <= __main___bcd_minutes_next_tens3;
	end
end
always @(*) begin
	__main___bcd_minutes_ones6 <= 4'd0;
	__main___bcd_minutes_ones6 <= __main___bcd_minutes_next_ones3;
	if ((__main___bcd_minutes_next_ones3 >= 3'd5)) begin
		__main___bcd_minutes_ones6 <= (__main___bcd_minutes_next_ones3 + 2'd3);
	end else begin
		__main___bcd_minutes_ones6 <= __main___bcd_minutes_next_ones3;
	end
end
always @(*) begin
	__main___bcd_minutes_next_hundreds4 <= 4'd0;
	__main___bcd_minutes_next_hundreds4[3:1] <= __main___bcd_minutes_hundreds6;
	__main___bcd_minutes_next_hundreds4[0] <= __main___bcd_minutes_tens6[3];
end
always @(*) begin
	__main___bcd_minutes_next_tens4 <= 4'd0;
	__main___bcd_minutes_next_tens4[3:1] <= __main___bcd_minutes_tens6;
	__main___bcd_minutes_next_tens4[0] <= __main___bcd_minutes_ones6[3];
end
always @(*) begin
	__main___bcd_minutes_next_ones4 <= 4'd0;
	__main___bcd_minutes_next_ones4[3:1] <= __main___bcd_minutes_ones6;
	__main___bcd_minutes_next_ones4[0] <= __main___bcd_minutes_value[3];
end
always @(*) begin
	__main___bcd_minutes_hundreds7 <= 4'd0;
	__main___bcd_minutes_hundreds7 <= __main___bcd_minutes_next_hundreds4;
	if ((__main___bcd_minutes_next_hundreds4 >= 3'd5)) begin
		__main___bcd_minutes_hundreds7 <= (__main___bcd_minutes_next_hundreds4 + 2'd3);
	end else begin
		__main___bcd_minutes_hundreds7 <= __main___bcd_minutes_next_hundreds4;
	end
end
always @(*) begin
	__main___bcd_minutes_tens7 <= 4'd0;
	__main___bcd_minutes_tens7 <= __main___bcd_minutes_next_tens4;
	if ((__main___bcd_minutes_next_tens4 >= 3'd5)) begin
		__main___bcd_minutes_tens7 <= (__main___bcd_minutes_next_tens4 + 2'd3);
	end else begin
		__main___bcd_minutes_tens7 <= __main___bcd_minutes_next_tens4;
	end
end
always @(*) begin
	__main___bcd_minutes_ones7 <= 4'd0;
	__main___bcd_minutes_ones7 <= __main___bcd_minutes_next_ones4;
	if ((__main___bcd_minutes_next_ones4 >= 3'd5)) begin
		__main___bcd_minutes_ones7 <= (__main___bcd_minutes_next_ones4 + 2'd3);
	end else begin
		__main___bcd_minutes_ones7 <= __main___bcd_minutes_next_ones4;
	end
end
always @(*) begin
	__main___bcd_minutes_next_hundreds5 <= 4'd0;
	__main___bcd_minutes_next_hundreds5[3:1] <= __main___bcd_minutes_hundreds7;
	__main___bcd_minutes_next_hundreds5[0] <= __main___bcd_minutes_tens7[3];
end
always @(*) begin
	__main___bcd_minutes_next_tens5 <= 4'd0;
	__main___bcd_minutes_next_tens5[3:1] <= __main___bcd_minutes_tens7;
	__main___bcd_minutes_next_tens5[0] <= __main___bcd_minutes_ones7[3];
end
always @(*) begin
	__main___bcd_minutes_next_ones5 <= 4'd0;
	__main___bcd_minutes_next_ones5[3:1] <= __main___bcd_minutes_ones7;
	__main___bcd_minutes_next_ones5[0] <= __main___bcd_minutes_value[2];
end
always @(*) begin
	__main___bcd_minutes_hundreds8 <= 4'd0;
	__main___bcd_minutes_hundreds8 <= __main___bcd_minutes_next_hundreds5;
	if ((__main___bcd_minutes_next_hundreds5 >= 3'd5)) begin
		__main___bcd_minutes_hundreds8 <= (__main___bcd_minutes_next_hundreds5 + 2'd3);
	end else begin
		__main___bcd_minutes_hundreds8 <= __main___bcd_minutes_next_hundreds5;
	end
end
always @(*) begin
	__main___bcd_minutes_tens8 <= 4'd0;
	__main___bcd_minutes_tens8 <= __main___bcd_minutes_next_tens5;
	if ((__main___bcd_minutes_next_tens5 >= 3'd5)) begin
		__main___bcd_minutes_tens8 <= (__main___bcd_minutes_next_tens5 + 2'd3);
	end else begin
		__main___bcd_minutes_tens8 <= __main___bcd_minutes_next_tens5;
	end
end
always @(*) begin
	__main___bcd_minutes_ones8 <= 4'd0;
	__main___bcd_minutes_ones8 <= __main___bcd_minutes_next_ones5;
	if ((__main___bcd_minutes_next_ones5 >= 3'd5)) begin
		__main___bcd_minutes_ones8 <= (__main___bcd_minutes_next_ones5 + 2'd3);
	end else begin
		__main___bcd_minutes_ones8 <= __main___bcd_minutes_next_ones5;
	end
end
always @(*) begin
	__main___bcd_minutes_next_hundreds6 <= 4'd0;
	__main___bcd_minutes_next_hundreds6[3:1] <= __main___bcd_minutes_hundreds8;
	__main___bcd_minutes_next_hundreds6[0] <= __main___bcd_minutes_tens8[3];
end
always @(*) begin
	__main___bcd_minutes_next_tens6 <= 4'd0;
	__main___bcd_minutes_next_tens6[3:1] <= __main___bcd_minutes_tens8;
	__main___bcd_minutes_next_tens6[0] <= __main___bcd_minutes_ones8[3];
end
always @(*) begin
	__main___bcd_minutes_next_ones6 <= 4'd0;
	__main___bcd_minutes_next_ones6[3:1] <= __main___bcd_minutes_ones8;
	__main___bcd_minutes_next_ones6[0] <= __main___bcd_minutes_value[1];
end
always @(*) begin
	__main___bcd_minutes_hundreds9 <= 4'd0;
	__main___bcd_minutes_hundreds9 <= __main___bcd_minutes_next_hundreds6;
	if ((__main___bcd_minutes_next_hundreds6 >= 3'd5)) begin
		__main___bcd_minutes_hundreds9 <= (__main___bcd_minutes_next_hundreds6 + 2'd3);
	end else begin
		__main___bcd_minutes_hundreds9 <= __main___bcd_minutes_next_hundreds6;
	end
end
always @(*) begin
	__main___bcd_minutes_tens9 <= 4'd0;
	__main___bcd_minutes_tens9 <= __main___bcd_minutes_next_tens6;
	if ((__main___bcd_minutes_next_tens6 >= 3'd5)) begin
		__main___bcd_minutes_tens9 <= (__main___bcd_minutes_next_tens6 + 2'd3);
	end else begin
		__main___bcd_minutes_tens9 <= __main___bcd_minutes_next_tens6;
	end
end
always @(*) begin
	__main___bcd_minutes_ones9 <= 4'd0;
	__main___bcd_minutes_ones9 <= __main___bcd_minutes_next_ones6;
	if ((__main___bcd_minutes_next_ones6 >= 3'd5)) begin
		__main___bcd_minutes_ones9 <= (__main___bcd_minutes_next_ones6 + 2'd3);
	end else begin
		__main___bcd_minutes_ones9 <= __main___bcd_minutes_next_ones6;
	end
end
always @(*) begin
	__main___bcd_minutes_next_hundreds7 <= 4'd0;
	__main___bcd_minutes_next_hundreds7[3:1] <= __main___bcd_minutes_hundreds9;
	__main___bcd_minutes_next_hundreds7[0] <= __main___bcd_minutes_tens9[3];
end
always @(*) begin
	__main___bcd_minutes_next_tens7 <= 4'd0;
	__main___bcd_minutes_next_tens7[3:1] <= __main___bcd_minutes_tens9;
	__main___bcd_minutes_next_tens7[0] <= __main___bcd_minutes_ones9[3];
end
always @(*) begin
	__main___bcd_minutes_next_ones7 <= 4'd0;
	__main___bcd_minutes_next_ones7[3:1] <= __main___bcd_minutes_ones9;
	__main___bcd_minutes_next_ones7[0] <= __main___bcd_minutes_value[0];
end
assign __main___bcd_minutes_hundreds0 = __main___bcd_minutes_next_hundreds7;
assign __main___bcd_minutes_tens0 = __main___bcd_minutes_next_tens7;
assign __main___bcd_minutes_ones0 = __main___bcd_minutes_next_ones7;
always @(*) begin
	__main___bcd_hours_hundreds2 <= 4'd0;
	__main___bcd_hours_hundreds2 <= __main___bcd_hours_hundreds1;
	if ((__main___bcd_hours_hundreds1 >= 3'd5)) begin
		__main___bcd_hours_hundreds2 <= (__main___bcd_hours_hundreds1 + 2'd3);
	end else begin
		__main___bcd_hours_hundreds2 <= __main___bcd_hours_hundreds1;
	end
end
always @(*) begin
	__main___bcd_hours_tens2 <= 4'd0;
	__main___bcd_hours_tens2 <= __main___bcd_hours_tens1;
	if ((__main___bcd_hours_tens1 >= 3'd5)) begin
		__main___bcd_hours_tens2 <= (__main___bcd_hours_tens1 + 2'd3);
	end else begin
		__main___bcd_hours_tens2 <= __main___bcd_hours_tens1;
	end
end
always @(*) begin
	__main___bcd_hours_ones2 <= 4'd0;
	__main___bcd_hours_ones2 <= __main___bcd_hours_ones1;
	if ((__main___bcd_hours_ones1 >= 3'd5)) begin
		__main___bcd_hours_ones2 <= (__main___bcd_hours_ones1 + 2'd3);
	end else begin
		__main___bcd_hours_ones2 <= __main___bcd_hours_ones1;
	end
end
always @(*) begin
	__main___bcd_hours_next_hundreds0 <= 4'd0;
	__main___bcd_hours_next_hundreds0[3:1] <= __main___bcd_hours_hundreds2;
	__main___bcd_hours_next_hundreds0[0] <= __main___bcd_hours_tens2[3];
end
always @(*) begin
	__main___bcd_hours_next_tens0 <= 4'd0;
	__main___bcd_hours_next_tens0[3:1] <= __main___bcd_hours_tens2;
	__main___bcd_hours_next_tens0[0] <= __main___bcd_hours_ones2[3];
end
always @(*) begin
	__main___bcd_hours_next_ones0 <= 4'd0;
	__main___bcd_hours_next_ones0[3:1] <= __main___bcd_hours_ones2;
	__main___bcd_hours_next_ones0[0] <= __main___bcd_hours_value[7];
end
always @(*) begin
	__main___bcd_hours_hundreds3 <= 4'd0;
	__main___bcd_hours_hundreds3 <= __main___bcd_hours_next_hundreds0;
	if ((__main___bcd_hours_next_hundreds0 >= 3'd5)) begin
		__main___bcd_hours_hundreds3 <= (__main___bcd_hours_next_hundreds0 + 2'd3);
	end else begin
		__main___bcd_hours_hundreds3 <= __main___bcd_hours_next_hundreds0;
	end
end
always @(*) begin
	__main___bcd_hours_tens3 <= 4'd0;
	__main___bcd_hours_tens3 <= __main___bcd_hours_next_tens0;
	if ((__main___bcd_hours_next_tens0 >= 3'd5)) begin
		__main___bcd_hours_tens3 <= (__main___bcd_hours_next_tens0 + 2'd3);
	end else begin
		__main___bcd_hours_tens3 <= __main___bcd_hours_next_tens0;
	end
end
always @(*) begin
	__main___bcd_hours_ones3 <= 4'd0;
	__main___bcd_hours_ones3 <= __main___bcd_hours_next_ones0;
	if ((__main___bcd_hours_next_ones0 >= 3'd5)) begin
		__main___bcd_hours_ones3 <= (__main___bcd_hours_next_ones0 + 2'd3);
	end else begin
		__main___bcd_hours_ones3 <= __main___bcd_hours_next_ones0;
	end
end
always @(*) begin
	__main___bcd_hours_next_hundreds1 <= 4'd0;
	__main___bcd_hours_next_hundreds1[3:1] <= __main___bcd_hours_hundreds3;
	__main___bcd_hours_next_hundreds1[0] <= __main___bcd_hours_tens3[3];
end
always @(*) begin
	__main___bcd_hours_next_tens1 <= 4'd0;
	__main___bcd_hours_next_tens1[3:1] <= __main___bcd_hours_tens3;
	__main___bcd_hours_next_tens1[0] <= __main___bcd_hours_ones3[3];
end
always @(*) begin
	__main___bcd_hours_next_ones1 <= 4'd0;
	__main___bcd_hours_next_ones1[3:1] <= __main___bcd_hours_ones3;
	__main___bcd_hours_next_ones1[0] <= __main___bcd_hours_value[6];
end
always @(*) begin
	__main___bcd_hours_hundreds4 <= 4'd0;
	__main___bcd_hours_hundreds4 <= __main___bcd_hours_next_hundreds1;
	if ((__main___bcd_hours_next_hundreds1 >= 3'd5)) begin
		__main___bcd_hours_hundreds4 <= (__main___bcd_hours_next_hundreds1 + 2'd3);
	end else begin
		__main___bcd_hours_hundreds4 <= __main___bcd_hours_next_hundreds1;
	end
end
always @(*) begin
	__main___bcd_hours_tens4 <= 4'd0;
	__main___bcd_hours_tens4 <= __main___bcd_hours_next_tens1;
	if ((__main___bcd_hours_next_tens1 >= 3'd5)) begin
		__main___bcd_hours_tens4 <= (__main___bcd_hours_next_tens1 + 2'd3);
	end else begin
		__main___bcd_hours_tens4 <= __main___bcd_hours_next_tens1;
	end
end
always @(*) begin
	__main___bcd_hours_ones4 <= 4'd0;
	__main___bcd_hours_ones4 <= __main___bcd_hours_next_ones1;
	if ((__main___bcd_hours_next_ones1 >= 3'd5)) begin
		__main___bcd_hours_ones4 <= (__main___bcd_hours_next_ones1 + 2'd3);
	end else begin
		__main___bcd_hours_ones4 <= __main___bcd_hours_next_ones1;
	end
end
always @(*) begin
	__main___bcd_hours_next_hundreds2 <= 4'd0;
	__main___bcd_hours_next_hundreds2[3:1] <= __main___bcd_hours_hundreds4;
	__main___bcd_hours_next_hundreds2[0] <= __main___bcd_hours_tens4[3];
end
always @(*) begin
	__main___bcd_hours_next_tens2 <= 4'd0;
	__main___bcd_hours_next_tens2[3:1] <= __main___bcd_hours_tens4;
	__main___bcd_hours_next_tens2[0] <= __main___bcd_hours_ones4[3];
end
always @(*) begin
	__main___bcd_hours_next_ones2 <= 4'd0;
	__main___bcd_hours_next_ones2[3:1] <= __main___bcd_hours_ones4;
	__main___bcd_hours_next_ones2[0] <= __main___bcd_hours_value[5];
end
always @(*) begin
	__main___bcd_hours_hundreds5 <= 4'd0;
	__main___bcd_hours_hundreds5 <= __main___bcd_hours_next_hundreds2;
	if ((__main___bcd_hours_next_hundreds2 >= 3'd5)) begin
		__main___bcd_hours_hundreds5 <= (__main___bcd_hours_next_hundreds2 + 2'd3);
	end else begin
		__main___bcd_hours_hundreds5 <= __main___bcd_hours_next_hundreds2;
	end
end
always @(*) begin
	__main___bcd_hours_tens5 <= 4'd0;
	__main___bcd_hours_tens5 <= __main___bcd_hours_next_tens2;
	if ((__main___bcd_hours_next_tens2 >= 3'd5)) begin
		__main___bcd_hours_tens5 <= (__main___bcd_hours_next_tens2 + 2'd3);
	end else begin
		__main___bcd_hours_tens5 <= __main___bcd_hours_next_tens2;
	end
end
always @(*) begin
	__main___bcd_hours_ones5 <= 4'd0;
	__main___bcd_hours_ones5 <= __main___bcd_hours_next_ones2;
	if ((__main___bcd_hours_next_ones2 >= 3'd5)) begin
		__main___bcd_hours_ones5 <= (__main___bcd_hours_next_ones2 + 2'd3);
	end else begin
		__main___bcd_hours_ones5 <= __main___bcd_hours_next_ones2;
	end
end
always @(*) begin
	__main___bcd_hours_next_hundreds3 <= 4'd0;
	__main___bcd_hours_next_hundreds3[3:1] <= __main___bcd_hours_hundreds5;
	__main___bcd_hours_next_hundreds3[0] <= __main___bcd_hours_tens5[3];
end
always @(*) begin
	__main___bcd_hours_next_tens3 <= 4'd0;
	__main___bcd_hours_next_tens3[3:1] <= __main___bcd_hours_tens5;
	__main___bcd_hours_next_tens3[0] <= __main___bcd_hours_ones5[3];
end
always @(*) begin
	__main___bcd_hours_next_ones3 <= 4'd0;
	__main___bcd_hours_next_ones3[3:1] <= __main___bcd_hours_ones5;
	__main___bcd_hours_next_ones3[0] <= __main___bcd_hours_value[4];
end
always @(*) begin
	__main___bcd_hours_hundreds6 <= 4'd0;
	__main___bcd_hours_hundreds6 <= __main___bcd_hours_next_hundreds3;
	if ((__main___bcd_hours_next_hundreds3 >= 3'd5)) begin
		__main___bcd_hours_hundreds6 <= (__main___bcd_hours_next_hundreds3 + 2'd3);
	end else begin
		__main___bcd_hours_hundreds6 <= __main___bcd_hours_next_hundreds3;
	end
end
always @(*) begin
	__main___bcd_hours_tens6 <= 4'd0;
	__main___bcd_hours_tens6 <= __main___bcd_hours_next_tens3;
	if ((__main___bcd_hours_next_tens3 >= 3'd5)) begin
		__main___bcd_hours_tens6 <= (__main___bcd_hours_next_tens3 + 2'd3);
	end else begin
		__main___bcd_hours_tens6 <= __main___bcd_hours_next_tens3;
	end
end
always @(*) begin
	__main___bcd_hours_ones6 <= 4'd0;
	__main___bcd_hours_ones6 <= __main___bcd_hours_next_ones3;
	if ((__main___bcd_hours_next_ones3 >= 3'd5)) begin
		__main___bcd_hours_ones6 <= (__main___bcd_hours_next_ones3 + 2'd3);
	end else begin
		__main___bcd_hours_ones6 <= __main___bcd_hours_next_ones3;
	end
end
always @(*) begin
	__main___bcd_hours_next_hundreds4 <= 4'd0;
	__main___bcd_hours_next_hundreds4[3:1] <= __main___bcd_hours_hundreds6;
	__main___bcd_hours_next_hundreds4[0] <= __main___bcd_hours_tens6[3];
end
always @(*) begin
	__main___bcd_hours_next_tens4 <= 4'd0;
	__main___bcd_hours_next_tens4[3:1] <= __main___bcd_hours_tens6;
	__main___bcd_hours_next_tens4[0] <= __main___bcd_hours_ones6[3];
end
always @(*) begin
	__main___bcd_hours_next_ones4 <= 4'd0;
	__main___bcd_hours_next_ones4[3:1] <= __main___bcd_hours_ones6;
	__main___bcd_hours_next_ones4[0] <= __main___bcd_hours_value[3];
end
always @(*) begin
	__main___bcd_hours_hundreds7 <= 4'd0;
	__main___bcd_hours_hundreds7 <= __main___bcd_hours_next_hundreds4;
	if ((__main___bcd_hours_next_hundreds4 >= 3'd5)) begin
		__main___bcd_hours_hundreds7 <= (__main___bcd_hours_next_hundreds4 + 2'd3);
	end else begin
		__main___bcd_hours_hundreds7 <= __main___bcd_hours_next_hundreds4;
	end
end
always @(*) begin
	__main___bcd_hours_tens7 <= 4'd0;
	__main___bcd_hours_tens7 <= __main___bcd_hours_next_tens4;
	if ((__main___bcd_hours_next_tens4 >= 3'd5)) begin
		__main___bcd_hours_tens7 <= (__main___bcd_hours_next_tens4 + 2'd3);
	end else begin
		__main___bcd_hours_tens7 <= __main___bcd_hours_next_tens4;
	end
end
always @(*) begin
	__main___bcd_hours_ones7 <= 4'd0;
	__main___bcd_hours_ones7 <= __main___bcd_hours_next_ones4;
	if ((__main___bcd_hours_next_ones4 >= 3'd5)) begin
		__main___bcd_hours_ones7 <= (__main___bcd_hours_next_ones4 + 2'd3);
	end else begin
		__main___bcd_hours_ones7 <= __main___bcd_hours_next_ones4;
	end
end
always @(*) begin
	__main___bcd_hours_next_hundreds5 <= 4'd0;
	__main___bcd_hours_next_hundreds5[3:1] <= __main___bcd_hours_hundreds7;
	__main___bcd_hours_next_hundreds5[0] <= __main___bcd_hours_tens7[3];
end
always @(*) begin
	__main___bcd_hours_next_tens5 <= 4'd0;
	__main___bcd_hours_next_tens5[3:1] <= __main___bcd_hours_tens7;
	__main___bcd_hours_next_tens5[0] <= __main___bcd_hours_ones7[3];
end
always @(*) begin
	__main___bcd_hours_next_ones5 <= 4'd0;
	__main___bcd_hours_next_ones5[3:1] <= __main___bcd_hours_ones7;
	__main___bcd_hours_next_ones5[0] <= __main___bcd_hours_value[2];
end
always @(*) begin
	__main___bcd_hours_hundreds8 <= 4'd0;
	__main___bcd_hours_hundreds8 <= __main___bcd_hours_next_hundreds5;
	if ((__main___bcd_hours_next_hundreds5 >= 3'd5)) begin
		__main___bcd_hours_hundreds8 <= (__main___bcd_hours_next_hundreds5 + 2'd3);
	end else begin
		__main___bcd_hours_hundreds8 <= __main___bcd_hours_next_hundreds5;
	end
end
always @(*) begin
	__main___bcd_hours_tens8 <= 4'd0;
	__main___bcd_hours_tens8 <= __main___bcd_hours_next_tens5;
	if ((__main___bcd_hours_next_tens5 >= 3'd5)) begin
		__main___bcd_hours_tens8 <= (__main___bcd_hours_next_tens5 + 2'd3);
	end else begin
		__main___bcd_hours_tens8 <= __main___bcd_hours_next_tens5;
	end
end
always @(*) begin
	__main___bcd_hours_ones8 <= 4'd0;
	__main___bcd_hours_ones8 <= __main___bcd_hours_next_ones5;
	if ((__main___bcd_hours_next_ones5 >= 3'd5)) begin
		__main___bcd_hours_ones8 <= (__main___bcd_hours_next_ones5 + 2'd3);
	end else begin
		__main___bcd_hours_ones8 <= __main___bcd_hours_next_ones5;
	end
end
always @(*) begin
	__main___bcd_hours_next_hundreds6 <= 4'd0;
	__main___bcd_hours_next_hundreds6[3:1] <= __main___bcd_hours_hundreds8;
	__main___bcd_hours_next_hundreds6[0] <= __main___bcd_hours_tens8[3];
end
always @(*) begin
	__main___bcd_hours_next_tens6 <= 4'd0;
	__main___bcd_hours_next_tens6[3:1] <= __main___bcd_hours_tens8;
	__main___bcd_hours_next_tens6[0] <= __main___bcd_hours_ones8[3];
end
always @(*) begin
	__main___bcd_hours_next_ones6 <= 4'd0;
	__main___bcd_hours_next_ones6[3:1] <= __main___bcd_hours_ones8;
	__main___bcd_hours_next_ones6[0] <= __main___bcd_hours_value[1];
end
always @(*) begin
	__main___bcd_hours_hundreds9 <= 4'd0;
	__main___bcd_hours_hundreds9 <= __main___bcd_hours_next_hundreds6;
	if ((__main___bcd_hours_next_hundreds6 >= 3'd5)) begin
		__main___bcd_hours_hundreds9 <= (__main___bcd_hours_next_hundreds6 + 2'd3);
	end else begin
		__main___bcd_hours_hundreds9 <= __main___bcd_hours_next_hundreds6;
	end
end
always @(*) begin
	__main___bcd_hours_tens9 <= 4'd0;
	__main___bcd_hours_tens9 <= __main___bcd_hours_next_tens6;
	if ((__main___bcd_hours_next_tens6 >= 3'd5)) begin
		__main___bcd_hours_tens9 <= (__main___bcd_hours_next_tens6 + 2'd3);
	end else begin
		__main___bcd_hours_tens9 <= __main___bcd_hours_next_tens6;
	end
end
always @(*) begin
	__main___bcd_hours_ones9 <= 4'd0;
	__main___bcd_hours_ones9 <= __main___bcd_hours_next_ones6;
	if ((__main___bcd_hours_next_ones6 >= 3'd5)) begin
		__main___bcd_hours_ones9 <= (__main___bcd_hours_next_ones6 + 2'd3);
	end else begin
		__main___bcd_hours_ones9 <= __main___bcd_hours_next_ones6;
	end
end
always @(*) begin
	__main___bcd_hours_next_hundreds7 <= 4'd0;
	__main___bcd_hours_next_hundreds7[3:1] <= __main___bcd_hours_hundreds9;
	__main___bcd_hours_next_hundreds7[0] <= __main___bcd_hours_tens9[3];
end
always @(*) begin
	__main___bcd_hours_next_tens7 <= 4'd0;
	__main___bcd_hours_next_tens7[3:1] <= __main___bcd_hours_tens9;
	__main___bcd_hours_next_tens7[0] <= __main___bcd_hours_ones9[3];
end
always @(*) begin
	__main___bcd_hours_next_ones7 <= 4'd0;
	__main___bcd_hours_next_ones7[3:1] <= __main___bcd_hours_ones9;
	__main___bcd_hours_next_ones7[0] <= __main___bcd_hours_value[0];
end
assign __main___bcd_hours_hundreds0 = __main___bcd_hours_next_hundreds7;
assign __main___bcd_hours_tens0 = __main___bcd_hours_next_tens7;
assign __main___bcd_hours_ones0 = __main___bcd_hours_next_ones7;
assign sys_clk = clk50;
assign por_clk = clk50;
assign sys_rst = platform_int_rst;
assign __main___btn0_press_user_btn = platform_multiregimpl0_regs1;
assign __main___btn1_press_user_btn = platform_multiregimpl1_regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge por_clk) begin
	platform_int_rst <= 1'd0;
end

always @(posedge sys_clk) begin
	if (((~__main___enable) | __main___ce)) begin
		__main___counter <= 26'd49999999;
	end else begin
		__main___counter <= (__main___counter - 1'd1);
	end
	if (__main___inc_minutes) begin
		__main___minutes <= (__main___minutes + 1'd1);
	end else begin
		if (__main___inc_hours) begin
			__main___hours <= (__main___hours + 1'd1);
		end else begin
			if (__main___tick) begin
				__main___seconds <= (__main___seconds + 1'd1);
				if ((__main___seconds == 6'd59)) begin
					__main___seconds <= 1'd0;
					__main___minutes <= (__main___minutes + 1'd1);
					if ((__main___minutes == 6'd59)) begin
						__main___minutes <= 1'd0;
						__main___hours <= (__main___hours + 1'd1);
						if ((__main___hours == 5'd23)) begin
							__main___hours <= 1'd0;
						end
					end
				end
			end
		end
	end
	__main___btn0_press_user_btn_d <= user_btn_r;
	__main___btn0_press_rising <= (__main___btn0_press_user_btn & (~__main___btn0_press_user_btn_d));
	__main___btn1_press_user_btn_d <= user_btn_l;
	__main___btn1_press_rising <= (__main___btn1_press_user_btn & (~__main___btn1_press_user_btn_d));
	if (sys_rst) begin
		__main___counter <= 26'd0;
		__main___seconds <= 6'd0;
		__main___minutes <= 6'd0;
		__main___hours <= 5'd0;
		__main___btn0_press_rising <= 1'd0;
		__main___btn0_press_user_btn_d <= 1'd0;
		__main___btn1_press_rising <= 1'd0;
		__main___btn1_press_user_btn_d <= 1'd0;
	end
	platform_multiregimpl0_regs0 <= user_btn_r;
	platform_multiregimpl0_regs1 <= platform_multiregimpl0_regs0;
	platform_multiregimpl1_regs0 <= user_btn_l;
	platform_multiregimpl1_regs1 <= platform_multiregimpl1_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-05-19 10:43:22.
//------------------------------------------------------------------------------
