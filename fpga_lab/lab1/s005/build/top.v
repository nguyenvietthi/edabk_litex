// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : top.v
// Device     : xc7k325tffg900-2
// LiteX sha1 : b020d4cf
// Date       : 2022-05-16 20:25:27
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module top (
	output reg  user_rgb_led_r,
	output reg  user_rgb_led_g,
	output reg  user_rgb_led_b,
	(* dont_touch = "true" *)	input  wire clk100
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  [31:0] __main___blink_r_counter = 32'd0;
reg  [31:0] __main___blink_g_counter = 32'd0;
reg  [31:0] __main___blink_b_counter = 32'd0;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg  platform_int_rst = 1'd1;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign sys_clk = clk100;
assign por_clk = clk100;
assign sys_rst = platform_int_rst;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge por_clk) begin
	platform_int_rst <= 1'd0;
end

always @(posedge sys_clk) begin
	__main___blink_r_counter <= (__main___blink_r_counter + 1'd1);
	if ((__main___blink_r_counter == 26'd49999999)) begin
		__main___blink_r_counter <= 1'd0;
		user_rgb_led_r <= (~user_rgb_led_r);
	end
	__main___blink_g_counter <= (__main___blink_g_counter + 1'd1);
	if ((__main___blink_g_counter == 25'd24999999)) begin
		__main___blink_g_counter <= 1'd0;
		user_rgb_led_g <= (~user_rgb_led_g);
	end
	__main___blink_b_counter <= (__main___blink_b_counter + 1'd1);
	if ((__main___blink_b_counter == 24'd12499999)) begin
		__main___blink_b_counter <= 1'd0;
		user_rgb_led_b <= (~user_rgb_led_b);
	end
	if (sys_rst) begin
		user_rgb_led_r <= 1'd0;
		__main___blink_r_counter <= 32'd0;
		user_rgb_led_g <= 1'd0;
		__main___blink_g_counter <= 32'd0;
		user_rgb_led_b <= 1'd0;
		__main___blink_b_counter <= 32'd0;
	end
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-05-16 20:25:27.
//------------------------------------------------------------------------------
